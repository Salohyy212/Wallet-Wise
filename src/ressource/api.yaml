openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0

servers:
  - url: 'https'
paths:
  /users:
    get:
      summary: Get all users
      tags:
        - User
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                users:
                  - id: 1
                    username: user123
                    email: user123@example.com
                  - id: 2
                    username: anotheruser
                    email: anotheruser@example.com

    post:
      summary: Create a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            example:
              username: newuser
              email: newuser@example.com
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              example:
                id: 3
                username: newuser
                email: newuser@example.com

  /users/{userId}:

    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the user

    get:
      summary: Get user by ID
      tags:
        - User
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                id: 1
                username: user123
                email: user123@example.com

    put:
      summary: Update user by ID
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            example:
              username: updateduser
              email: updateduser@example.com
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              example:
                id: 1
                username: updatedUser
                email: updateduser@example.com

    delete:
      summary: Delete user by ID
      tags:
        - User
      responses:
        '204':
          description: User deleted successfully
  /accounts:
    get:
      summary: Get all accounts
      tags:
        - Accounts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                accounts:
                  - id: 101
                    balance: 100.00
                  - id: 102
                    balance: 50.00

    post:
      summary: Create a new account
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            example:
              balance: 50.00
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              example:
                id: 103
                balance: 50.00

  /accounts/{accountId}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the account

    get:
      summary: Get account by ID
      tags:
        - Accounts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                id: 101
                balance: 100.00

    put:
      summary: Update account by ID
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            example:
              balance: 75.00
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              example:
                id: 101
                balance: 75.00

    delete:
      summary: Delete account by ID
      tags:
        - Accounts
      responses:
        '204':
          description: Account deleted successfully
  /transactions:
    get:
      summary: Get all transactions
      tags:
        - Transactions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                transactions:
                  - id: 201
                    amount: 50.00
                    date: '2023-01-15T10:30:00Z'
                  - id: 202
                    amount: 25.00
                    date: '2023-01-16T12:45:00Z'

    post:
      summary: Create a new transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            example:
              amount: 30.00
              date: '2023-01-20T08:15:00Z'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              example:
                id: 203
                amount: 30.00
                date: '2023-01-20T08:15:00Z'

  /transactions/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the transaction

    get:
      summary: Get transaction by ID
      tags:
        - Transactions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                id: 201
                amount: 50.00
                date: '2023-01-15T10:30:00Z'

    put:
      summary: Update transaction by ID
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            example:
              amount: 40.00
              date: '2023-01-22T09:00:00Z'
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              example:
                id: 201
                amount: 40.00
                date: '2023-01-22T09:00:00Z'

    delete:
      summary: Delete transaction by ID
      tags:
        - Transactions
      responses:
        '204':
          description: Transaction deleted successfully
  /currencies:
    get:
      summary: Get all currencies
      tags:
        - Currencies
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'

    post:
      summary: Create a new currency
      tags:
        - Currencies
      requestBody:
        required: true
        content:
          application/json:
            example:
              code: USD
              name: US Dollar
      responses:
        '201':
          $ref: '#/components/responses/SuccessResponse'

  /currencies/{currencyId}:
    parameters:
      - name: currencyId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the currency

    get:
      summary: Get currency by ID
      tags:
        - Currencies
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'

    put:
      summary: Update currency by ID
      tags:
        - Currencies
      requestBody:
        required: true
        content:
          application/json:
            example:
              code: EUR
              name: Euro
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'

    delete:
      summary: Delete currency by ID
      tags:
        - Currencies
      responses:
        '204':
          $ref: '#/components/responses/SuccessResponse'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string

    Account:
      type: object
      properties:
        id:
          type: integer
        balance:
          type: number

    Transaction:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
        date:
          type: string
          format: date-time

    Currency:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
  responses:
    SuccessResponse:
      description: Successful response
      content:
        application/json:
          example: { }


